import { ILogger, ILoggerImplementationOptions } from './logger';
/**
 * A Logger Factory that creates Logger objects by name, returning the original
 * logger if one already exists with the same name.
 */
declare class LogManager {
    private loggers;
    constructor();
    /**
     * Gets a logger with the given `appName_serviceName` name. Creates a new logger if none exist with
     * the said `name`.
     * @param {string} appName The appName name of the Logger to be created or retrieved
     * @param {string} serviceName The serviceName name of the Logger to be created or retrieved
     * @param {object} context The default properties to be included in all log messages
     * @param {Logger} The new or retrieved Logger
     */
    getLogger(appName: string, serviceName: string, context?: any, implementation?: ILoggerImplementationOptions): ILogger;
}
export { LogManager };
