"use strict";
const stream_1 = require("stream");
/**
 * ConsoleStream
 */
class ConsoleStream extends stream_1.Writable {
    constructor() {
        super({ objectMode: false });
        this.consolelog = console.log.bind(console);
    }
    /**
     * @override to Writeable._write
     * When bunyan stream definition is NOT raw, then each chunk is a buffer of the JSON-stringified bunyan stream
     */
    _write(chunk, encoding, callback) {
        this.consolelog(chunk.toString());
        setImmediate(callback);
    }
}
/**
 * Returns the bunyan stream definition with { stream: ConsoleStream }
 * raw:
 * Similar to a "stream" writable stream, except that the write method is given raw log record Objects instead of a JSON-stringified string.
 *
 * Usage:
 * var logger = getLogger(appName, serviceName, context?, options? )
 * logger.addStream(getConsoleStream({ level: 'info' }))
 */
function getConsoleStream(opts) {
    const level = (opts && opts.level) || 'info';
    return { level, stream: new ConsoleStream() };
}
exports.getConsoleStream = getConsoleStream;
