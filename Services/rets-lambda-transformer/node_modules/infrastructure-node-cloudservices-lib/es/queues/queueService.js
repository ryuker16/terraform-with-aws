import * as BPromise from 'bluebird';
import { defaults } from 'lodash';
export class QueueService {
    constructor(client, options) {
        this.client = client;
        this.options = options;
        if (!client) {
            throw new TypeError('client');
        }
    }
    getMessage(options) {
        return BPromise.resolve(this.client.getMessage(this.getOptions(options)));
    }
    getMessages(batchSize, options) {
        return BPromise.resolve(this.client.getMessages(batchSize, this.getOptions(options)));
    }
    deleteMessage(message, options) {
        return BPromise.resolve(this.client.deleteMessage(message, this.getOptions(options)));
    }
    deleteMessages(messages, options) {
        return BPromise.resolve(this.client.deleteMessages(messages, this.getOptions(options)));
    }
    getOptions(options) {
        return defaults({}, options, this.options);
    }
}
