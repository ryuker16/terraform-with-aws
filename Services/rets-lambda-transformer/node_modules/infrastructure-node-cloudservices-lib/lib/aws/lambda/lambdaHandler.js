"use strict";
var _ = require('lodash');
var Promise = require('bluebird');
var LambdaHandler = (function () {
    function LambdaHandler(lambda, lambdaContext) {
        this.lambda = lambda;
        this.lambdaContext = lambdaContext;
        if (!_.isObjectLike(lambda)) {
            throw new TypeError('lambda');
        }
        if (!_.isObjectLike(lambdaContext)) {
            throw new TypeError('lambdaContext');
        }
    }
    LambdaHandler.prototype.selfInvokeAsync = function (event, invokeParams) {
        var params = {
            FunctionName: this.lambdaContext.functionName,
            InvocationType: 'Event'
        };
        if (_.isObject(invokeParams)) {
            params = _.defaults(invokeParams, params);
        }
        if (_.isObjectLike(event)) {
            params.Payload = JSON.stringify(event);
        }
        return Promise.resolve(this.lambda.invoke(params).promise());
    };
    return LambdaHandler;
}());
exports.LambdaHandler = LambdaHandler;
