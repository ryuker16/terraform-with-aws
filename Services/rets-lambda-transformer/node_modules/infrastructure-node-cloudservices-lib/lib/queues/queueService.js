"use strict";
var BPromise = require('bluebird');
var lodash_1 = require('lodash');
var QueueService = (function () {
    function QueueService(client, options) {
        this.client = client;
        this.options = options;
        if (!client) {
            throw new TypeError('client');
        }
    }
    QueueService.prototype.getMessage = function (options) {
        return BPromise.resolve(this.client.getMessage(this.getOptions(options)));
    };
    QueueService.prototype.getMessages = function (batchSize, options) {
        return BPromise.resolve(this.client.getMessages(batchSize, this.getOptions(options)));
    };
    QueueService.prototype.deleteMessage = function (message, options) {
        return BPromise.resolve(this.client.deleteMessage(message, this.getOptions(options)));
    };
    QueueService.prototype.deleteMessages = function (messages, options) {
        return BPromise.resolve(this.client.deleteMessages(messages, this.getOptions(options)));
    };
    QueueService.prototype.getOptions = function (options) {
        return lodash_1.defaults({}, options, this.options);
    };
    return QueueService;
}());
exports.QueueService = QueueService;
