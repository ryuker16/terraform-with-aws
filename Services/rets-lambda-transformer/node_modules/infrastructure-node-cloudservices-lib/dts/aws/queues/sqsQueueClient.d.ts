/// <reference types="bluebird" />
import * as AWS from 'aws-sdk';
import * as BPromise from 'bluebird';
import { IQueueClient, IQueueMessage, IQueueMessageOf, IDeleteMessagesResult, IQueueOptions } from '../../queues';
export declare class SQSQueueClient implements IQueueClient {
    private sqs;
    private queueUrl;
    constructor(sqs: AWS.SQS, queueUrl?: string);
    static mapMessage<T>(msg: AWS.SQS.Types.Message): IQueueMessageOf<T, AWS.SQS.Types.Message>;
    getMessage<T>(options?: IQueueOptions): BPromise<IQueueMessage<T>>;
    getMessages<T>(batchSize: number, options?: IQueueOptions): BPromise<IQueueMessage<T>[]>;
    deleteMessage(message: IQueueMessage<any>, options?: IQueueOptions): BPromise<any>;
    deleteMessages(messages: IQueueMessage<any>[], options?: IQueueOptions): BPromise<IDeleteMessagesResult>;
    private getQueueUrl(options?);
}
