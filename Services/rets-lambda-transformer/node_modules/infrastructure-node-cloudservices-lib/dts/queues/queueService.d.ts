/// <reference types="bluebird" />
import * as BPromise from 'bluebird';
import * as Q from './interfaces';
export declare class QueueService implements Q.IQueueService {
    private client;
    private options;
    constructor(client: Q.IQueueClient, options?: Q.IQueueOptions);
    getMessage<T>(options?: Q.IQueueOptions): BPromise<Q.IQueueMessage<T>>;
    getMessages<T>(batchSize: number, options?: Q.IQueueOptions): BPromise<Q.IQueueMessage<T>[]>;
    deleteMessage(message: Q.IQueueMessage<any>, options?: Q.IQueueOptions): BPromise<any>;
    deleteMessages(messages: Q.IQueueMessage<any>[], options?: Q.IQueueOptions): BPromise<Q.IDeleteMessagesResult>;
    private getOptions(options?);
}
