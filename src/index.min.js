var AWS=require("aws-sdk");var response=require("cfn-response");exports.handler=function(f,e){console.log("REQUEST RECEIVED");console.log(f);var d=new AWS.Firehose();var g=function(i){console.log(i);response.send(f,e,response.SUCCESS,i)};var a=function(i){console.log(i,i.stack);response.send(f,e,response.FAILED,i)};var h={DeliveryStreamName:f.ResourceProperties.DeliveryStreamName,ExtendedS3DestinationConfiguration:{BucketARN:f.ResourceProperties.BucketARN,RoleARN:f.ResourceProperties.RoleARN,BufferingHints:{IntervalInSeconds:f.ResourceProperties.IntervalInSeconds,SizeInMBs:f.ResourceProperties.SizeInMBs},CloudWatchLoggingOptions:{Enabled:true,LogGroupName:f.ResourceProperties.LogGroupName,LogStreamName:f.ResourceProperties.LogStreamName},CompressionFormat:f.ResourceProperties.CompressionFormat,EncryptionConfiguration:{NoEncryptionConfig:"NoEncryption"},Prefix:f.ResourceProperties.Prefix,ProcessingConfiguration:{Enabled:true,Processors:[{Type:"Lambda",Parameters:[{ParameterName:"LambdaArn",ParameterValue:f.ResourceProperties.LambdaArn}]}]},S3BackupMode:f.ResourceProperties.S3BackupModeEnabled}};if(f.ResourceProperties.NumberOfRetries>0){h.ExtendedS3DestinationConfiguration.ProcessingConfiguration.Processors[0].Parameters.push({ParameterName:"NumberOfRetries",ParameterValue:f.ResourceProperties.NumberOfRetries})}if(f.ResourceProperties.S3BackupModeEnabled==="Enabled"){h.ExtendedS3DestinationConfiguration.S3BackupConfiguration={BucketARN:f.ResourceProperties.BackupBucketARN,RoleARN:f.ResourceProperties.RoleARN,BufferingHints:{IntervalInSeconds:f.ResourceProperties.IntervalInSeconds,SizeInMBs:f.ResourceProperties.SizeInMBs},CloudWatchLoggingOptions:{Enabled:true,LogGroupName:f.ResourceProperties.LogGroupName,LogStreamName:f.ResourceProperties.LogStreamName},CompressionFormat:f.ResourceProperties.CompressionFormat,EncryptionConfiguration:{NoEncryptionConfig:"NoEncryption"},Prefix:f.ResourceProperties.BackupPrefix}}if(f.RequestType==="Create"){d.createDeliveryStream(h,function(i,j){if(i){a(i)}else{g({message:j})}})}else{if(f.RequestType==="Update"){var c=f.ResourceProperties.DeliveryStreamName;var b={ExclusiveStartDeliveryStreamName:c.substring(0,c.length-1)};d.listDeliveryStreams(b,function(i,j){function k(l){console.log(l);return c===l}if(i){a(i)}else{if(!j.DeliveryStreamNames.length||c!==j.DeliveryStreamNames.find(k)){console.log(j.DeliveryStreamNames);a({message:j.DeliveryStreamNames})}else{d.describeDeliveryStream({DeliveryStreamName:c},function(m,l){if(m){a(m)}else{var n={ExtendedS3DestinationUpdate:h.ExtendedS3DestinationConfiguration,CurrentDeliveryStreamVersionId:l.DeliveryStreamDescription.VersionId,DestinationId:l.DeliveryStreamDescription.Destinations[0].DestinationId};d.updateDestination(n,function(p,o){if(p){a(p)}else{g(o)}})}})}}})}else{if(f.RequestType==="Delete"){d.deleteDeliveryStream(h,function(i,j){if(i){a(i)}else{g(j)}})}else{g({message:"no-op"});return}}}};